name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - uses: actions/checkout@v4
      - run: echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}"
      - uses: google-github-actions/auth@v3
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'
      - run: gcloud info 

      - name: Build and push Docker image
        id: build-image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.ECR_REPOSITORY }}:${{ github.ref_name }}-${{ github.sha }}

      - name: Static Code Analysis
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .

      - name: Scan Docker image with Docker Scout
        run: |
          docker scout cves ${{ secrets.ECR_REPOSITORY }}:${{ github.ref_name }}-${{ github.sha }}

  update_helm_chart:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Update Helm chart with new image tag
        run: |
          sed -i 's/tag:.*/tag: ${{ github.ref_name }}-${{ github.sha }}/' helm-chart/values-${{ github.ref_name }}.yaml

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-...@github.com'
          git commit -am "Update image tag to ${{ github.ref_name }}-${{ github.sha }}"
          git push origin ${{ github.ref_name }}

  verify_deployment_dev:
    runs-on: ubuntu-latest
    needs: update_helm_chart
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.21.0'

      - name: Configure GCP credentials
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'  

      - name: Verify deployment
        run: |
          kubectl get pods -n dev -l app=microservices-demo -o jsonpath='{.items[*].status.conditions[?(@.type=="Ready")].status}' | grep -q "True"

  notify_failure:
    runs-on: ubuntu-latest
    needs: [build, update_helm_chart, verify_deployment_dev]
    if: failure()
    steps:
      - name: Send failure notification
        run: echo "Build, update, or deployment verification failed. Notification sent."

